syntax = "proto3";

package pb;

import "google/api/annotations.proto";
import "google/protobuf/descriptor.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "search.proto";
import "files.proto";

option go_package = "github.com/damione1/GoFinder/pkg/proto;pb";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Go finder"
    version: "0.0.1"
    contact: {
      name: "Damien Goehrig"
      url: "github.com/Damione1/GoFinder"
      email: "go-finder@damiengoehrig.ca"
    }
  }
  tags: {
    name: "Search"
    description: "Endpoints for searching"
  }
  tags: {
    name: "Ingestion"
    description: "Endpoints for user management"
  }
  tags: {
    name: "Security"
    description: "Endpoints for security management"
  }
  tags: {
    name: "Statistics"
    description: "Endpoints for statistics"
  }
};

service SearchService {
  rpc Search(SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
      post: "/v1/search"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "Search"
      description: ""
      security: {};
      tags: "Search";
    };
  }
  rpc GetUploadURL(GetUploadURLRequest) returns (GetUploadURLResponse) {
    option (google.api.http) = {
      post: "/v1/files/upload"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "GetUploadURL"
      description: ""
      security: {};
      tags: "Ingestion";
    };
  }
  rpc NotifyUploadComplete(NotifyUploadCompleteRequest) returns (NotifyUploadCompleteResponse) {
    option (google.api.http) = {
      post: "/v1/files/complete"
      body: "*"
    };
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "NotifyUploadComplete"
      description: ""
      security: {};
      tags: "Ingestion";
    };
  }
}
